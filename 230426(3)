#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>

// 배열(array)
// 배열은 같은 타입의 변수들로 이루어진 유한 집합
// 배열을 구성하는 각각의 값을 배열 요소라 한다.
// 배열에서 위치를 가르키는 숫자는 인덱스 라고 한다.
// 항상 인덱스는 0에서 시작하며 0을 포함안 양의 정수만을 가질 수 있다.


// int arr[3]; --> 배열 선언 방법, 배열의 크기는 0보다 커야 한다.


//int size = 100;
//double data[size];// 배열은 변수 지정 불가

#define MAX 5 // 하지만 메크로 상수 지정은 가능하다
int arr[MAX]; 

// 배열 코딩
int main() {
	int arr[5]; //크기가 5인 배열 생성(정수형)
	int byte_size = 0; //배열의 바잍 크기를 저장할 변수
	int size = 0;		// 배열의 크기를 저장할 변 수
	int i;
	byte_size = sizeof(arr); //배열의 바이트 크기
	printf("배열의 바이트 크기 : %d\n\n", byte_size);
	size = siziof(arr) / sizeof(arr[0]);
	printf("배열의 크기  : %d\n", size);
	for (i = 0; i < size; i++) {
		arr[i] = 0;

	}
	return 0;
}

//메크로 상수로 이용한 배열

#define ARR_SIZE 5
int main() {
	int arr[ARR_SIZE];
	int i;
	for (i = 0; i < ARR_SIZE; i++)
	{
		arr[i] = 0;
	}
	printf("arr배열의 원소:");

	for (i = 0; i < ARR_SIZE; i++)
	{
		printf("%d", arr[i]);
	}
	printf("\n");
	return 0;
}

// 배열 코딩

#define ARR_SIZE 5
int add(int a, int b) { return a + b; }

int main() {
	int arr[ARR_SIZE] = { 0 };
	int i;
	arr[0] = 5;
	arr[1] = arr[0] + 10; //배열의 요소(원소)를 수식에 이용
	arr[2] = add(arr[0], arr[1]); // 함수의 인자로 사용
	printf("정수를 2개 입력 하시오 : ");
	scanf("%d %d", &arr[3], &arr[4]);
	for (i = 0; i < ARR_SIZE; i++)
	{
		printf("%d", arr[i]);

	}

	printf("\n");
	return 0;

}

#define ARR_SIZE 5

int main() {
	int arr[ARR_SIZE] = { 10, 20, 30, 40, 50 };
	int i;
	printf("arr= ");
	for (i = 0; i < ARR_SIZE; i++)
	{
		printf("%d ", arr[i]);
	}

	printf("\n");
	printf("arr[5] = %d \n", arr[5]);
	return 0;
}


int main() //배열의 초기화는 단 한번 처음 선언 시 한번에 모든 칸 초기화 가능, 배열의 크키보다 많은 변수를 지정 시 컴파일 오류가 난다.
{
	int arr[4] = { 1,2,3 };
  
	arr[0] = 3;
	arr[1] = 5;
	arr[2] = 7;
	arr[3] = 9;

	printf("arr 배열의 첫번째 요소 주소값 : %p\t 요소값: %d \n",&arr[0],arr[0]);
	printf("arr 배열의 첫번째 요소 주소값 : %p\t 요소값: %d \n",&arr[1],arr[1]);
	printf("arr 배열의 첫번째 요소 주소값 : %p\t 요소값: %d \n",&arr[2],arr[2]);
	printf("arr 배열의 첫번째 요소 주소값 : %p\t 요소값: %d \n",&arr[3],arr[3]);

	return 0;


}



